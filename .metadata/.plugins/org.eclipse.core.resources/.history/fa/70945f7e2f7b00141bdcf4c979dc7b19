; ECE4703 B-term 2014
	; An example of C-callable assembly functions
	; original by DRB (2011) edited smj (2014)

	.def 	_iir_single  ; make label _test_asm visible to external progs
ZZZ	.equ	100	   ; declare constant (not necessary, just an example)
	.ref	_x	   ; refer to global variable x
			   ; _x is a label associated with ADDRESS of x
	                   ; two things get passed in:
	                   ; A4 = a
	                   ; B4 = b
	                   ; This code computes a*x+b and returns the result

_iir_single:

	MVKL 	.S1 	_x, A0		; here we put the address of the global
    	MVKH 	.S1 	_x, A0         	; variable x in A0
	LDW	.D1	*A0, A1		; the contents of x stored in A1 now
	NOP		4
	MPYSP	.M1	A1,A4,A5	; A5 = A1*A4 (temp result = a*x)
	NOP		3		; wait 3 delay slots for result
	ADDSP	.L1x	A5,B4,A4	; final result = (a*x)+b
				 	; need to use "cross path" designated
					; by x to bring B4 to L1
	NOP		3		; wait 3 delay slots for result
	B		B3		; branch back to calling function
					; This function passes result in A4
	NOP		5		; Clear pipeline

	.end
